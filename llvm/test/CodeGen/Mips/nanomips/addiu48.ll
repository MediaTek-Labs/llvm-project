; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=nanomips-unknown=elf -verify-machineinstrs < %s | FileCheck %s

%struct.__test = type { [100 x i8], i32 }

@g = dso_local local_unnamed_addr global [128 x %struct.__test] zeroinitializer, align 4
@g2 = dso_local local_unnamed_addr global [128 x i32] zeroinitializer, align 4

define dso_local i32 @foo(i32 signext %i) local_unnamed_addr {
; CHECK-LABEL: foo:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    sll $a1, $a0, 4
; CHECK-NEXT:    lsa $a1, $a0, $a1, 3
; CHECK-NEXT:    sll $a0, $a0, 7
; CHECK-NEXT:    subu $a0, $a0, $a1
; CHECK-NEXT:    addiu $a0, $a0, g+100
; CHECK-NEXT:    lw $a0, 0($a0)
; CHECK-NEXT:    jrc $ra
entry:
  %val = getelementptr inbounds [128 x %struct.__test], [128 x %struct.__test]* @g, i32 0, i32 %i, i32 1
  %0 = load i32, i32* %val, align 4
  ret i32 %0
}

define dso_local i32 @bar(i32 signext %i) local_unnamed_addr {
; CHECK-LABEL: bar:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    lapc.b $a1, g2
; CHECK-NEXT:    lwxs $a0, $a0($a1)
; CHECK-NEXT:    jrc $ra
entry:
  %arrayidx = getelementptr inbounds [128 x i32], [128 x i32]* @g2, i32 0, i32 %i
  %0 = load i32, i32* %arrayidx, align 4
  ret i32 %0
}
